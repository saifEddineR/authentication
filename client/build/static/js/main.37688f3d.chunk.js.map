{"version":3,"sources":["redux/userSlice.js","pages/LoginPage.js","pages/RegisterPage.js","components/Navbar.js","redux/postSlice.js","components/Profile.js","App.js","store.js","index.js"],"names":["postNewUser","createAsyncThunk","info","a","rejectWithValue","axios","post","res","data","response","message","errors","password","msg","login","userSlice","createSlice","name","initialState","userInfo","JSON","parse","localStorage","getItem","loading","token","isAuth","Boolean","reducers","logout","state","console","log","removeItem","extraReducers","pending","fulfilled","action","payload","user","setItem","stringify","rejected","actions","LoginPage","history","dispatch","useDispatch","useState","userInput","setUserInput","useSelector","useEffect","push","handleChange","e","target","value","type","placeholder","onChange","onClick","preventDefault","RegisterPage","Navbar","to","addNewPost","formData","FormData","append","file","postInfo","headers","getPosts","get","postSlice","posts","postErrors","postsErrors","Profile","setPostInfo","setFile","files","map","title","src","image","imageURL","alt","description","App","className","path","component","store","configureStore","reducer","userReducer","postReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37688f3d.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const postNewUser = createAsyncThunk(\r\n  'user/postNewUser',\r\n  async (info, { rejectWithValue }) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/users/register', info);\r\n      return res.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response.data.errors.password.msg\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk('user/login', async (data, { rejectWithValue }) => {\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/users/login', data);\r\n    return res.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message);\r\n  }\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    userInfo: JSON.parse(localStorage.getItem('user')),\r\n    loading: false,\r\n    errors: null,\r\n    token: localStorage.getItem('token'),\r\n    isAuth: Boolean(localStorage.getItem('isAuth')),\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      console.log('logout');\r\n      // localStorage.clear();\r\n      state.isAuth = false;\r\n      state.userInfo = {};\r\n      state.token = null;\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('isAuth');\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [postNewUser.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n    [postNewUser.fulfilled]: (state, action) => {\r\n      console.log(action.payload);\r\n      state.userInfo = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isAuth = true;\r\n      state.errors = null;\r\n      localStorage.setItem('token', action.payload.token);\r\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n      localStorage.setItem('isAuth', true);\r\n    },\r\n    [postNewUser.rejected]: (state, action) => {\r\n      state.errors = action.payload;\r\n      state.isAuth = false;\r\n    },\r\n    [login.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n    [login.fulfilled]: (state, action) => {\r\n      console.log(action.payload);\r\n      state.userInfo = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isAuth = true;\r\n      state.errors = null;\r\n      localStorage.setItem('token', action.payload.token);\r\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n      localStorage.setItem('isAuth', true);\r\n    },\r\n    [login.rejected]: (state, action) => {\r\n      state.errors = action.payload;\r\n      state.isAuth = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\nexport const { logout } = userSlice.actions;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../redux/userSlice';\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [userInput, setUserInput] = useState({});\r\n  const user = useSelector((state) => state.user);\r\n  console.log(user);\r\n  useEffect(() => {\r\n    if (user.isAuth) {\r\n      history.push('/profile');\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [user.isAuth]);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput({ ...userInput, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(userInput));\r\n  };\r\n  return (\r\n    <form>\r\n      <input type='email' placeholder='email' name='email' onChange={handleChange} />\r\n      <input\r\n        type='password'\r\n        placeholder='password'\r\n        name='password'\r\n        onChange={handleChange}\r\n      />\r\n      <button type='submit' onClick={handleSubmit}>\r\n        Login\r\n      </button>\r\n      {user && user.errors && <p>{user.errors} </p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postNewUser } from '../redux/userSlice';\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [userInput, setUserInput] = useState({});\r\n  const user = useSelector((state) => state.user);\r\n  useEffect(() => {\r\n    if (user.isAuth) {\r\n      history.push('/profile');\r\n    } else {\r\n      history.push('/register');\r\n    }\r\n  }, [user.isAuth]);\r\n  const handleChange = (e) => {\r\n    setUserInput({ ...userInput, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(postNewUser(userInput));\r\n  };\r\n  return (\r\n    <form>\r\n      <input\r\n        type='text'\r\n        placeholder='full name'\r\n        name='fullName'\r\n        onChange={handleChange}\r\n      />\r\n      <input type='email' placeholder='email' name='email' onChange={handleChange} />\r\n      <input\r\n        type='password'\r\n        placeholder='password'\r\n        name='password'\r\n        onChange={handleChange}\r\n      />\r\n      <button type='submit' onClick={handleSubmit}>\r\n        Login\r\n      </button>\r\n      {user && user.errors && <p>{user.errors} </p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../redux/userSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  return (\r\n    <div>\r\n      <Link to='/'>Home</Link>\r\n      {user.isAuth ? (\r\n        <Link to='/login' onClick={() => dispatch(logout())}>\r\n          logout\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <Link to='/login'>Login</Link>\r\n          <Link to='/register'>Register</Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const addNewPost = createAsyncThunk(\r\n  'posts/addnewpost',\r\n  async (info, { rejectWithValue, dispatch }) => {\r\n    console.log(info);\r\n    const formData = new FormData();\r\n    formData.append('picture', info.file);\r\n    formData.append('info', JSON.stringify(info.postInfo));\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/posts/addpost', formData, {\r\n        headers: { token: localStorage.getItem('token') },\r\n      });\r\n      dispatch(getPosts());\r\n      return res.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response.data.errors.password.msg\r\n      );\r\n    }\r\n  }\r\n);\r\nexport const getPosts = createAsyncThunk(\r\n  'posts/getPosts',\r\n  async (info, { rejectWithValue }) => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/posts');\r\n      return res.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [],\r\n    loading: false,\r\n    postErrors: null,\r\n    postsErrors: null,\r\n    post: {},\r\n  },\r\n  extraReducers: {\r\n    [addNewPost.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n    [addNewPost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.post = action.payload;\r\n      state.postErrors = null;\r\n    },\r\n    [addNewPost.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.errors = action.payload;\r\n    },\r\n    [getPosts.pending]: (state) => {\r\n      state.loading = true;\r\n    },\r\n    [getPosts.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.posts = action.payload;\r\n      state.postsErrors = null;\r\n    },\r\n    [getPosts.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addNewPost, getPosts } from '../redux/postSlice';\r\n\r\nconst Profile = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const post = useSelector((state) => state.post);\r\n  useEffect(() => {\r\n    if (!user.isAuth) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(getPosts());\r\n    }\r\n  }, [user.isAuth]);\r\n  const [postInfo, setPostInfo] = useState({});\r\n  const [file, setFile] = useState({});\r\n  const handleChange = (e) => {\r\n    setPostInfo({ ...postInfo, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNewPost({ postInfo, file }));\r\n  };\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input type='text' name='title' onChange={handleChange} placeholder='title' />\r\n        <input\r\n          type='text'\r\n          name='description'\r\n          onChange={handleChange}\r\n          placeholder='description'\r\n        />\r\n        <input type='file' name='file' onChange={(e) => setFile(e.target.files[0])} />\r\n        <button type='submit' onClick={handleSubmit}>\r\n          add post\r\n        </button>\r\n      </form>\r\n      <br />\r\n      <div>\r\n        {post.posts &&\r\n          post.posts.map((post) => (\r\n            <>\r\n              <h2>{post.title} </h2>\r\n              <img src={post.image.imageURL} alt='workshop' />\r\n              <p>{post.description}</p>\r\n            </>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport Navbar from './components/Navbar';\nimport Profile from './components/Profile';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Navbar />\n      <Switch>\n        <Route path='/login' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/profile' component={Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from './redux/userSlice';\r\nimport postReducer from './redux/postSlice';\r\n\r\nconst store = configureStore({ reducer: { user: userReducer, post: postReducer } });\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}